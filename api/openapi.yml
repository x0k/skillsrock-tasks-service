openapi: 3.1.1
info:
  title: Task Management Service
  version: 1.0.0

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Credentials:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string

    AccessToken:
      type: object
      properties:
        access_token:
          type: string

    TaskStatus:
      type: string
      enum: [pending, in_progress, done]

    TaskPriority:
      type: string
      enum: [low, medium, high]

    Task:
      type: object
      required:
        - id
        - title
        - status
        - priority
        - due_date
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          description: Task title
        description:
          type: string
        status:
          $ref: "#/components/schemas/TaskStatus"
        priority:
          $ref: "#/components/schemas/TaskPriority"
        due_date:
          type: string
          format: date
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    TaskCreate:
      type: object
      required:
        - title
        - status
        - priority
        - due_date
      properties:
        title:
          type: string
        description:
          type: string
        status:
          $ref: "#/components/schemas/TaskStatus"
        priority:
          $ref: "#/components/schemas/TaskPriority"
        due_date:
          type: string
          format: date

    TaskUpdate:
      type: object
      properties:
        title:
          type: string
          description: Task title
        description:
          type: string
          description: Task description
        status:
          type: string
          enum: [pending, in_progress, done]
          description: Current task status
        priority:
          type: string
          enum: [low, medium, high]
          description: Task priority level
        due_date:
          type: string
          format: date
          description: Task due date

    TaskList:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"

    AnalyticsReport:
      type: object
      properties:
        pending_tasks_count:
          type: integer
        in_progress_tasks_count:
          type: integer
        done_tasks_count:
          type: integer
        average_completion_time_in_days:
          type: string
        amount_of_completed_tasks:
          type: integer
        amount_of_overdue_tasks:
          type: integer

security:
  - bearerAuth: []

paths:
  /auth/register:
    post:
      summary: Register a new user
      security: []
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credentials"
      responses:
        "201":
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessToken"
        "400":
          description: Invalid input
        "409":
          description: User already exists

  /auth/login:
    post:
      summary: Authenticate user and get JWT token
      security: []
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credentials"
      responses:
        "200":
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessToken"
        "401":
          description: Authentication failed

  /tasks:
    get:
      summary: Get list of tasks with filtering and search
      tags:
        - Tasks
      parameters:
        - name: status
          in: query
          schema:
            $ref: "#/components/schemas/TaskStatus"
        - name: priority
          in: query
          schema:
            $ref: "#/components/schemas/TaskPriority"
        - name: due_before
          in: query
          schema:
            type: string
            format: date
        - name: due_after
          in: query
          schema:
            type: string
            format: date
        - name: title
          in: query
          schema:
            type: string
      responses:
        "200":
          description: List of tasks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskList"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: Create a new task
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskCreate"
      responses:
        "201":
          description: Task created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized

  /tasks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Task ID
        schema:
          type: string
          format: uuid

    put:
      summary: Update a task
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskCreate"
      responses:
        "204":
          description: Task updated successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "404":
          description: Task not found

    delete:
      summary: Delete a task
      tags:
        - Tasks
      responses:
        "204":
          description: Task deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Task not found

  /analytics:
    get:
      summary: Get analytics data
      tags:
        - Analytics
      responses:
        "200":
          description: Analytics data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsReport"
        "401":
          description: Unauthorized
        "404":
          description: Report not found

  /tasks/import:
    post:
      summary: Import tasks from JSON
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskList"
      responses:
        "201":
          description: Tasks imported successfully
        "400":
          description: Invalid input
        "409":
          description: Task already exists
        "401":
          description: Unauthorized

  /tasks/export:
    get:
      summary: Export tasks to JSON
      tags:
        - Tasks
      responses:
        "200":
          description: Tasks exported successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskList"
        "401":
          description: Unauthorized
